/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import javax.swing.JOptionPane;
import BasesNumericas.Binario;
import BasesNumericas.Decimal;
import BasesNumericas.Hexadecimal;
import BasesNumericas.Octal;

/**
 *
 * @author janeth
 */
public class VentanaBasesNumericas extends javax.swing.JInternalFrame {

    /**
     * Creates new form VentajaBasesNumericas
     */
    private Binario ObjBinario = new Binario();
    private Decimal ObjDecimal = new Decimal();
    private Hexadecimal ObjHexadecimal = new Hexadecimal();
    private Octal ObjOctal = new Octal();

    public VentanaBasesNumericas() {
        initComponents();
        jButton1.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jComboBox2.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Operaciones Logicas");

        jLabel1.setText("Seleccione una base numerica:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Binario", "Decimal", "Octal", "Hexadecimal" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccione la operacion logica a realizar:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Not", "And", "Or", "Xor" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Ingrese el numero 1:");

        jLabel4.setText("Ingrese el numero 2: ");

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Resultado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                .addComponent(jTextField2))))
                    .addComponent(jButton1)
                    .addComponent(jLabel5))
                .addContainerGap(192, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jLabel5.setVisible(false);
        jTextField1.setText("");
        jTextField2.setText("");
        switch (jComboBox2.getSelectedIndex()) {
            case 0:
                jButton1.setVisible(false);
                jLabel3.setVisible(false);
                jLabel4.setVisible(false);
                jTextField1.setVisible(false);
                jTextField2.setVisible(false);
                JOptionPane.showMessageDialog(null, "Seleccione una operacion logica");
                break;
            case 1:
                jButton1.setVisible(true);
                jLabel4.setVisible(false);
                jTextField2.setVisible(false);
                jLabel3.setVisible(true);
                jTextField1.setVisible(true);
                jLabel3.setText("Ingrese el numero:");
                break;
            default:
                jButton1.setVisible(true);
                jLabel4.setVisible(true);
                jTextField2.setVisible(true);
                jLabel3.setVisible(true);
                jTextField1.setVisible(true);
                jLabel3.setText("Ingrese el numero 1:");
                jLabel4.setText("Ingrese el numero 2:");
                break;
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        jButton1.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        jTextField1.setText("");
        jTextField2.setText("");
        switch (jComboBox1.getSelectedIndex()) {
            case 0:
                jLabel2.setVisible(false);
                jComboBox2.setVisible(false);
                JOptionPane.showMessageDialog(null, "Seleccione una base numerica");
                break;
            default:
                jLabel2.setVisible(true);
                jComboBox2.setVisible(true);
                break;
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jLabel5.setVisible(true);
        String tupla = "" + jComboBox1.getSelectedIndex() + jComboBox2.getSelectedIndex();
        switch (Integer.parseInt(tupla)) {
            case 11:
                if (ObjBinario.VerificarRestriccionBinario(Integer.parseInt(jTextField1.getText()))) {
                    jLabel5.setText("" + ObjBinario.NotBinario(Integer.parseInt(jTextField1.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero sobrepasa el limite establecido");
                }
                break;
            case 12:
                if (ObjBinario.VerificarRestriccionBinario(Integer.parseInt(jTextField1.getText())) && ObjBinario.VerificarRestriccionBinario(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjBinario.AndBinario(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 13:
                if (ObjBinario.VerificarRestriccionBinario(Integer.parseInt(jTextField1.getText())) && ObjBinario.VerificarRestriccionBinario(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjBinario.OrBinario(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 14:
                if (ObjBinario.VerificarRestriccionBinario(Integer.parseInt(jTextField1.getText())) && ObjBinario.VerificarRestriccionBinario(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjBinario.XorBinario(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 21:
                if (ObjDecimal.VerificarRestriccionDecimal(Integer.parseInt(jTextField1.getText()))) {
                    jLabel5.setText("" + ObjDecimal.NotDecimal(Integer.parseInt(jTextField1.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 22:
                if (ObjDecimal.VerificarRestriccionDecimal(Integer.parseInt(jTextField1.getText())) && ObjDecimal.VerificarRestriccionDecimal(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjDecimal.AndDecimal(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 23:
                if (ObjDecimal.VerificarRestriccionDecimal(Integer.parseInt(jTextField1.getText())) && ObjDecimal.VerificarRestriccionDecimal(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjDecimal.OrDecimal(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 24:
                if (ObjDecimal.VerificarRestriccionDecimal(Integer.parseInt(jTextField1.getText())) && ObjDecimal.VerificarRestriccionDecimal(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjDecimal.XorDecimal(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 31:
                if (ObjOctal.VerificarRestriccionOctal(Integer.parseInt(jTextField1.getText()))) {
                    jLabel5.setText("" + ObjOctal.NotOctal(Integer.parseInt(jTextField1.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 32:
                if (ObjOctal.VerificarRestriccionOctal(Integer.parseInt(jTextField1.getText())) && ObjOctal.VerificarRestriccionOctal(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjOctal.AndOctal(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 33:
                if (ObjOctal.VerificarRestriccionOctal(Integer.parseInt(jTextField1.getText())) && ObjOctal.VerificarRestriccionOctal(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjOctal.OrOctal(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 34:
                if (ObjOctal.VerificarRestriccionOctal(Integer.parseInt(jTextField1.getText())) && ObjOctal.VerificarRestriccionOctal(Integer.parseInt(jTextField2.getText()))) {
                    jLabel5.setText("" + ObjOctal.XorOctal(Integer.parseInt(jTextField1.getText()), Integer.parseInt(jTextField2.getText())));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 41:
                if (ObjHexadecimal.VerificarRestriccionHexadecimal(jTextField1.getText())) {
                    jLabel5.setText("" + ObjHexadecimal.NotHexadecimal(jTextField1.getText()));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 42:
                if (ObjHexadecimal.VerificarRestriccionHexadecimal(jTextField1.getText()) && ObjHexadecimal.VerificarRestriccionHexadecimal(jTextField2.getText())) {
                    jLabel5.setText("" + ObjHexadecimal.AndHexadecimal(jTextField1.getText(), jTextField2.getText()));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 43:
                if (ObjHexadecimal.VerificarRestriccionHexadecimal(jTextField1.getText()) && ObjHexadecimal.VerificarRestriccionHexadecimal(jTextField2.getText())) {
                    jLabel5.setText("" + ObjHexadecimal.OrHexadecimal(jTextField1.getText(), jTextField2.getText()));
                } else {
                    JOptionPane.showConfirmDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
            case 44:
                if (ObjHexadecimal.VerificarRestriccionHexadecimal(jTextField1.getText()) && ObjHexadecimal.VerificarRestriccionHexadecimal(jTextField2.getText())) {
                    jLabel5.setText("" + ObjHexadecimal.XorHexadecimal(jTextField1.getText(), jTextField2.getText()));
                } else {
                    JOptionPane.showMessageDialog(null, "El numero(s) sobrepasa el limite establecido");
                }
                break;
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
